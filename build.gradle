plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    // Плагин для копирования классов определённых
    // зависимостей в jar-файл сборки
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

version = project.mod_version
group = project.maven_group

repositories {
    maven { url 'https://maven.shedaniel.me/' }
    maven { url 'https://maven.terraformersmc.com/releases/' }
}

dependencies {
    // Fabric, Minecraft и т.д.
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    // Вместо всего fabric-api здесь используются определённые 
    // библиотеки, что ускоряет сборку в 2-3 раза
    modImplementation "net.fabricmc.fabric-api:fabric-command-api-v2:${project.fabric_command_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-resource-loader-v0:${project.fabric_resources_version}"
    // API других модов
    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }
    modApi("com.terraformersmc:modmenu:${project.modmenu_version}") {
        exclude module: "net.fabricmc.fabric-api:fabric-api-base"
    }
    // Зависимости Lombok
    implementation 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    // Библиотеки, которые будут вшиты в jar-ник после сборки
    implementation 'com.github.alexdlaird:java-ngrok:1.6.1'
    shadow 'com.github.alexdlaird:java-ngrok:1.6.1'
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    minimize()

    dependencies {
        // В Minecraft и так присутствует GSON, так что
        // нету смысла добавлять его в jar-файл
        // Тем более это экономия в ~100 килобайт
        exclude dependency('com.google.code.gson:gson')
    }

    configurations = [project.configurations.shadow]
    archiveBaseName.set(project.archives_base_name)
    archiveClassifier.set("not-remapped")
}

remapJar {
    dependsOn(shadowJar)
    inputFile.set(shadowJar.archiveFile)
}

jar {
    from "LICENSE"
}

java {
    archivesBaseName = project.archives_base_name
    // Указывается версия исходного кода (минимальная, поддерживающая var, т.е. 10)
    // и версия выходных class-файлов, а именно 17, так как её использует Minecraft
    sourceCompatibility = JavaVersion.VERSION_1_10
    targetCompatibility = JavaVersion.VERSION_17
}
